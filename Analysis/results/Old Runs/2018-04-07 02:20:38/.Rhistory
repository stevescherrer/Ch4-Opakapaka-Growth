mod_eval_results_lf = as.data.frame(t(mod_eval_results))
rownames(mod_eval_results_lf)
mod_eval_results_lf$model_id = rownames(mod_eval_results_lf)
reshape(mod_eval_results_lf, idvar = 'model_id', direction = "long")
reshape(mod_eval_results_lf, varying = colnames(mod_eval_results_lf), idvar = 'model_id', direction = "long")
length(colnames(mod_eval_results_lf))
head(colnames(mod_eval_results_lf))
reshape(mod_eval_results_lf, varying = colnames(mod_eval_results_lf[1:1000]), idvar = 'model_id', direction = "long")
mod_eval_results_lf = reshape(mod_eval_results_lf, varying = colnames(mod_eval_results_lf[1:1000]), idvar = 'model_id', direction = "long")
boxplot(mod_eval_results_lf)
boxplot(mod_eval_results_lf$result ~ mod_eval_results_lf$model_id)
boxplot(mod_eval_results_lf$result ~ mod_eval_results_lf$model_id, ylim = c(0, 15))
mean(mod_eval_results$`model 6`)
median(mod_Eval_results$`model 6`)
median(mod_eval_results$`model 6`)
median(mod_eval_results$`model 5`)
median(mod_eval_results$`model 7`)
median(mod_eval_results$`model 5`)
median(mod_eval_results$`model 5`)
median(mod_eval_results$`model 6`)
median(mod_eval_results$`model 6`, na.rm = TRUE)
median(mod_eval_results$`model 5`, na.rm = TRUE)
median(mod_eval_results$`model 7`, na.rm = TRUE)
median(mod_eval_results$`model 8`, na.rm = TRUE)
median(mod_eval_results$`model 9`, na.rm = TRUE)
median(mod_eval_results$`model 10`, na.rm = TRUE)
median(mod_eval_results$`model 11`, na.rm = TRUE)
mean(mod_eval_results$`model 11`, na.rm = TRUE)
lit_var_scores = rep(0, length(lit_vbgf_for_train$author))
for(i in 1:length(lit_vbgf_for_train$author)){
lit_var_scores[i] = calculate_predictive_variance(Lm = tagdat[ ,1], dt = tagdat[ ,4], linf = lit_vbgf_for_train$linf[i], k = lit_vbgf_for_train$k[i], Lr_obs = tagdat[ ,2])
}
lit_vbgf = lit_vbgc_params[lit_vbgc_params$region %in% c('Hawaii - MHI & NWHI', 'Hawaii - MHI', 'Hawaii - NWHI'), ]
lit_vbgf_for_train = lit_vbgf[!(lit_vbgf$author %in% paste('Bayesian Model',1:4)), ]
lit_var_scores = rep(0, length(lit_vbgf_for_train$author))
for(i in 1:length(lit_vbgf_for_train$author)){
lit_var_scores[i] = calculate_predictive_variance(Lm = tagdat[ ,1], dt = tagdat[ ,4], linf = lit_vbgf_for_train$linf[i], k = lit_vbgf_for_train$k[i], Lr_obs = tagdat[ ,2])
}
lit_var_scores
lit_vbgf$author
bootstrap_results$booted_param_ests_all_tagging_data
mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 5'
mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1]
mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 6'
bootstrap_results$booted_param_ests_model6 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_7',boot_iterations = 5, wt.oto = 1/length(otodat$age), wt.lf = 1/length(lfdat$curr_month_year), wt.tag = 1/dim(tagdat)[1], otodat = otodat, tagdat = tagdat, pseudolf = pseudo_data)
## Assigning cores for parallel processing
registerDoParallel(cores = detectCores()-1)
library('notifyR') # #send_push()
library('doParallel')
# library('beepr')
library('mixtools')
library('reshape2')
mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 6'
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = 'Booting Prefered Model')
boot_iterations = 40
bootstrap_results = list()
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = 'Booting Prefered Model')
boot_iterations = 40
bootstrap_results = list()
mod_eval_results_table = aggregate(model_structure_selection$best_ll_mod, by = list(model_structure_selection$best_ll_mod), FUN = length)
## Setting intial params for all data
#        mu.L, sig.L,  k,  mu.A, sig.A, sig.sci, sig.f, a0, sig.oto, sig.lf
p0 <- c(  70,     1, .10,     1,    .1,      1,     0,   0,    1,      1)
lb <- c(  50,   0.1, .05,   0.1,   .05,    0.1,     0, -10,  0.1,    0.1)
ub <- c( 110,  15.0, .50,   1.5,   .50,   15.0,     0,  10,   15,     15)
if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 5') {
## Specifying starting parameters, as well as upper and lower bounds for parameter estimation
#        mu.L, sig.L,  k,  mu.A, sig.A, sig.sci, sig.f, a0, sig.oto, sig.lf
p0 <- c(  70,     1, .10,   1.0,   .10,      1,     0,   0,    0,     0)
lb <- c(  50,   0.1, .05,   0.1,   .05,    0.1,     0,   0,    0,     0)
ub <- c( 110,  15.0, .50,   1.5,   .50,   15.0,     0,   0,    0,     0)
print('Booting Model 5')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 5")
timer6full = proc.time()
bootstrap_results$booted_param_ests_all_tagging_data = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_6', boot_iterations = boot_iterations, wt.oto = 0, wt.lf = 0, wt.tag = 1, tagdat = tagdat)
boot_time =  (proc.time() -  timer6full)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 6  complete!"))
} else if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 6') {
## 7. Model including all Data sources - Equal weighting to each data type
print('Booting Model 6')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 6")
timer7 = proc.time()
bootstrap_results$booted_param_ests_model6 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_7',boot_iterations = boot_iterations, wt.oto = 1/length(otodat$age), wt.lf = 1/length(lfdat$curr_month_year), wt.tag = 1/dim(tagdat)[1], otodat = otodat, tagdat = tagdat, pseudolf = pseudo_data)
boot_time =  (proc.time() -  timer7)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 7 complete!"))
} else if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 7') {
## 8. Model including all Data sources - weighting based on number of sample size
print('Booting Model 7')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 7")
timer8 = proc.time()
bootstrap_results$booted_param_ests_model7 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_8_all_data', boot_iterations = boot_iterations,tagdat=tagdat, otodat=otodat, pseudolf=pseudo_data, wt.oto=1, wt.tag=1, wt.lf=1)
boot_time =  (proc.time() -  timer8)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 8 complete!"))
} else if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 8') {
## 9. Model including all Data sources treated individually - with equal weighting
print('Booting Model 8')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 8")
timer9 = proc.time()
bootstrap_results$booted_param_ests_model8 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_9_all_data', boot_iterations = boot_iterations, tagdat=tagdat, tagdat2 = NULL, otodat=otodat[otodat$source == 'demartini', ], otodat2=otodat[otodat$source == 'ralston and miyamoto', ], otodat3=otodat[otodat$source == 'andrews bomb carbon', ], otodat4=otodat[otodat$source == 'andrews lead radium', ], pseudolf=pseudo_data, pseudolf2=NULL, wt.oto= 1/dim(otodat[otodat$source == 'demartini', ])[1], wt.oto2= 1/dim(otodat[otodat$source == 'ralston and miyamoto', ])[1], wt.oto3=1/dim(otodat[otodat$source == 'andrews bomb carbon', ])[1], wt.oto4=1/dim(otodat[otodat$source == 'andrews lead radium', ])[1], wt.tag = 1/dim(tagdat)[1], wt.tag2 = 0, wt.lf = 1/length(pseudolf$curr_month_year), wt.lf2 = 0)
boot_time =  (proc.time() -  timer9)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 9 complete!"))
} else if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 9') {
## 10. Model including all Data sources treated individually - weighting based on number of sample size
print('Booting Model 9')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 9")
timer10 = proc.time()
bootstrap_results$booted_param_ests_model9 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_10', boot_iterations = boot_iterations, tagdat=tagdat, tagdat2 = NULL, otodat=otodat[otodat$source == 'demartini', ], otodat2=otodat[otodat$source == 'ralston and miyamoto', ], otodat3=otodat[otodat$source == 'andrews bomb carbon', ], otodat4=otodat[otodat$source == 'andrews lead radium', ], pseudolf=pseudo_data, pseudolf2=NULL, wt.oto= 1, wt.oto2= 1, wt.oto3=1, wt.oto4=1, wt.tag = 1, wt.tag2 = 0, wt.lf = 1, wt.lf2 = 0)
boot_time =  (proc.time() -  timer10)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 10 complete!"))
} else if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 10') {
## 11. Model without Ralston & Miyamoto - Equal weighting (Because Brett said this was shit!)
print('Booting Model 10')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 10")
timer11 = proc.time()
bootstrap_results$booted_param_ests_model10 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_11', boot_iterations = boot_iterations, tagdat=tagdat, tagdat2 = NULL, otodat=otodat[otodat$source == 'demartini', ], otodat2=otodat[otodat$source == 'ralston and miyamoto', ], otodat3=otodat[otodat$source == 'andrews bomb carbon', ], otodat4=otodat[otodat$source == 'andrews lead radium', ], pseudolf=pseudo_data, pseudolf2 = NULL, wt.oto= 1/dim(otodat[otodat$source == 'demartini', ])[1], wt.oto2= 0, wt.oto3=1/dim(otodat[otodat$source == 'andrews bomb carbon', ])[1], wt.oto4=1/dim(otodat[otodat$source == 'andrews lead radium', ])[1], wt.tag = 1/dim(tagdat)[1], wt.tag2 = 0, wt.lf = 1/length(pseudolf$curr_month_year), wt.lf2 = 0)
boot_time =  (proc.time() -  timer11)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 11 complete!"))
} else if (mod_eval_results_table[which.max(mod_eval_results_table[ ,2]), 1] == 'model 11') {
### 12. Model without Ralston & Miyamoto - weighted by n (Because Brett said this was shit!)
print('Booting Model 11')
send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = "model 11")
timer12 = proc.time()
bootstrap_results$booted_param_ests_model11 = bootstrap_growth_params(filename = 'bootstrapped_parameter_estimates_model_12', boot_iterations = boot_iterations, tagdat=tagdat, tagdat2 = NULL, otodat=otodat[otodat$source == 'demartini', ], otodat2=otodat[otodat$source == 'ralston and miyamoto', ], otodat3=otodat[otodat$source == 'andrews bomb carbon', ], otodat4=otodat[otodat$source == 'andrews lead radium', ], pseudolf=pseudo_data, pseudolf2=NULL, wt.oto= 1, wt.oto2= 0, wt.oto3=1, wt.oto4=1, wt.tag = 1, wt.tag2 = 0, wt.lf = 1, wt.lf2 = 0)
boot_time =  (proc.time() -  timer12)[3] / 60 / 60
#send_push(user = 'uGEHvA4hr37tsrCCtpSv4sUUxVuTqN', message = paste(round(boot_time, digits = 2), "Hours later, bootstrapping model 12 complete!"))
}
remove.packages('reshape2')
mod_eval_results_lf = reshape(mod_eval_results_lf, varying = colnames(mod_eval_results_lf[1:n_iterations]), idvar = 'model_id', direction = "long")
n_iterations = 1000
mod_eval_results_lf = reshape(mod_eval_results_lf, varying = colnames(mod_eval_results_lf[1:n_iterations]), idvar = 'model_id', direction = "long")
mod_eval_results_lf
dim(mod_eval_results_lf)
mod_eval_results_lf = as.data.frame(t(mod_eval_results[ ,1:7]))
dim(mod_eval_results_lf)
mod_eval_results_lf$model_id = rownames(mod_eval_results_lf)
mod_eval_results_lf = reshape(mod_eval_results_lf, varying = colnames(mod_eval_results_lf[1:n_iterations]), idvar = 'model_id', direction = "long")
?reshape
